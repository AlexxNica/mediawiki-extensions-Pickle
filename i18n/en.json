{
	"@metadata": {
		"authors": [
			"jeblad"
		]
	},
	"spec-desc": "This extension adds basic Spec-style testing to Lua modules.",
	"spec-testspec-subpage": "$1/spec",
	"spec-testspec-invoke": "{{#invoke:$1|tap}}",
	"spec-testcase-subpage": "$1/testcase",
	"spec-testcase-invoke": "-",
	"spec-default-subpage": "$1/spec",
	"spec-default-invoke": "-",
	"spec-test-text-good": "Good",
	"spec-test-text-pending": "Pending",
	"spec-test-text-failing": "Failing",
	"spec-test-text-exists": "Test page exists",
	"spec-test-text-missing": "Test page missing",
	"spec-test-text-unknown": "Unknown",
	"spec-tracking-category-good": "Modules with good tests",
	"spec-tracking-category-good-desc": "The result indicates a \"good\" state after evaluating the tests.",
	"spec-tracking-category-pending": "Modules with pending tests",
	"spec-tracking-category-pending-desc": "The result indicates a \"pending\" state after evaluating the tests.",
	"spec-tracking-category-failing": "Modules with failing tests",
	"spec-tracking-category-failing-desc": "The result indicates a \"failing\" state after evaluating the tests.",
	"spec-tracking-category-missing": "Modules without test page",
	"spec-tracking-category-missing-desc": "The result indicates a \"missing\" test page after evaluating the invocation.",
	"spec-tracking-category-exists": "Modules with test page",
	"spec-tracking-category-exists-desc": "The result indicates an \"existing\" test page after evaluating the invocation.",
	"spec-tracking-category-unknown": "Modules with unknown tests",
	"spec-tracking-category-unknown-desc": "The result indicates a \"unknown\" state after evaluating the tests.",
	"spec-track-log-name": "Module track log",
	"spec-track-log-header": "This log shows a summary of change results from tested modules.",
	"spec-track-log-entry-good": "{{GENDER:$2|inferred automatically}} that $1 has good tests",
	"spec-track-log-entry-pending": "{{GENDER:$2|inferred automatically}} that $1 has pending tests",
	"spec-track-log-entry-failing": "{{GENDER:$2|inferred automatically}} that $1 has failing tests",
	"spec-track-log-entry-exists": "{{GENDER:$2|inferred automatically}} that $1 has a test page",
	"spec-track-log-entry-missing": "{{GENDER:$2|inferred automatically}} that $1 is missing a test page",
	"spec-track-log-entry-unknown": "{{GENDER:$2|inferred automatically}} that $1 has unknown tests",
	"spec-console-title": "Test console",
	"spec-console-empty": "No reports available.",
	"spec-console-cleared": "Clearded console.",
	"spec-console-run": "Run",
	"spec-console-clear": "Clear",
	"spec-report-skip-no-message": "The message key \"$1\" does not exist",
	"spec-frame-compact-header-all-good": "ok &mdash; $1",
	"spec-frame-compact-header-some failed": "not ok &mdash; $1",
	"spec-frame-full-header": "# $1",
	"spec-frame-vivid-header": "$1",
	"spec-report-result-compact-is-ok": "ok",
	"spec-report-result-compact-is-not-ok": "not ok",
	"spec-report-result-compact-wrap-skip": "skip $1",
	"spec-report-result-compact-wrap-todo": "todo $1",
	"spec-report-result-compact-wrap-description": "$1",
	"spec-report-result-compact-wrap-line": "\t$1",
	"spec-report-result-full-is-ok": "ok",
	"spec-report-result-full-is-not-ok": "not ok",
	"spec-report-result-full-wrap-skip": "skip $1",
	"spec-report-result-full-wrap-todo": "todo $1",
	"spec-report-result-full-wrap-description": "$1",
	"spec-report-result-full-wrap-line": "\t$1",
	"spec-report-result-vivid-is-ok": "ok",
	"spec-report-result-vivid-is-not-ok": "not ok",
	"spec-report-result-vivid-wrap-skip": "skip $1",
	"spec-report-result-vivid-wrap-todo": "todo $1",
	"spec-report-result-vivid-wrap-description": "$1",
	"spec-report-result-vivid-wrap-line": "$1",
	"spec-adapt-process-first": "Pick first element",
	"spec-adapt-process-second": "Pick second element",
	"spec-adapt-process-third": "Pick third element",
	"spec-adapt-process-fourth": "Pick fourth element",
	"spec-adapt-process-fifth": "Pick fifth element",
	"spec-adapt-process-sixth": "Pick sixth element",
	"spec-adapt-process-seventh": "Pick seventh element",
	"spec-adapt-process-eight": "Pick eight element",
	"spec-adapt-process-ninth": "Pick ninth element",
	"spec-adapt-process-tenth": "Pick tenth element",
	"spec-adapt-process-eleventh": "Pick eleventh element",
	"spec-adapt-process-twelfth": "Pick twelfth element",
	"spec-adapt-process-as-type": "Get type of element",
	"spec-adapt-process-as-upper": "Uppercase all characters in the string",
	"spec-adapt-process-as-lower": "Lowercase all characters in the string",
	"spec-adapt-process-as-upper-first": "Uppercase first character in string",
	"spec-adapt-process-as-lower-first": "Lowercase first character in string",
	"spec-adapt-process-as-reverse": "Reverse string",
	"spec-adapt-process-as-u-upper": "Uppercase whole Unicode string",
	"spec-adapt-process-as-u-lower": "Lowercase whole Unicode string",
	"spec-adapt-process-as-u-upper-first": "Uppercase first character in Unicode string",
	"spec-adapt-process-as-u-lower-first": "Lowercase first character in Unicode string",
	"spec-adapt-process-as-u-n-f-c": "Recode Unicode string as Normalized Form C (NFC)",
	"spec-adapt-process-as-u-n-f-d": "Recode Unicode string as Normalized Form D (NFD)",
	"spec-adapt-process-as-number": "Cast string into number",
	"spec-adapt-process-as-string": "Cast into string",
	"spec-adapt-process-as-floor": "Find lower integer",
	"spec-adapt-process-as-ceil": "Find upper integer",
	"spec-adapt-process-as-round": "Find closest integer",
	"spec-adapt-process-as-integer": "Find integer part",
	"spec-adapt-process-as-fraction": "Find fraction part",
	"spec-adapt-condition-to-be-equal": "Shall be equal to target (equality)",
	"spec-adapt-condition-to-be-boolean-equal": "Shall be boolean equal to target (evaluates to same boolean value)",
	"spec-adapt-condition-to-be-strict-equal": "Shall be strict equal to target (exact equality and type equality)",
	"spec-adapt-condition-to-be-same": "Shall be same as target (equal after type coersion)",
	"spec-adapt-condition-to-be-deep-equal": "Shall be deep equal to target (dives into tables)",
	"spec-adapt-condition-to-be-contained": "Shall be contained within the target",
	"spec-adapt-condition-to-be-lesser-than": "Shall be lesser than the target",
	"spec-adapt-condition-to-be-greater-than": "Shall be greater than the target",
	"spec-adapt-condition-to-be-lesser-or-equal": "Shall be lesser or equal than the target",
	"spec-adapt-condition-to-be-greater-or-equal": "Shall be greater or equal than the target",
	"spec-adapt-condition-to-be-match": "Shall be matched in the target",
	"spec-adapt-condition-to-be-u-match": "Shall be matched in the Unicode target"
}
